---
import { ClientRouter } from "astro:transitions";
import "../styles/global.css";
import { getSeasonalColors } from "../utils/seasonalGradient";
import {
  calculateSunPosition,
  formatTime,
  getCurrentCentralHour,
} from "../utils/timeUtils";
import { fetchWeatherData } from "../utils/weatherUtils";
import type { WeatherData, TimeInfo } from "../types";

import Navigation from "../components/Navigation.astro";
import InfoContainer from "../components/InfoContainer.astro";
import GradientBackground from "../components/GradientBackground.astro";
import SpeedInsights from "@vercel/speed-insights/astro";
import Analytics from "@vercel/analytics/astro";

// Page setup
const pathname = Astro.url.pathname;

// Get colors and calculate time
const { startColor, endColor } = getSeasonalColors();
const now = new Date();
const currentHour = getCurrentCentralHour();

// Get the start of the year in Central time
const startOfYear = new Date(now.getFullYear(), 0, 0);
const centralNow = new Date(
  now.toLocaleString("en-US", { timeZone: "America/Chicago" }),
);
const centralStartOfYear = new Date(
  startOfYear.toLocaleString("en-US", { timeZone: "America/Chicago" }),
);

const currentDay = Math.floor(
  (centralNow.getTime() - centralStartOfYear.getTime()) / (1000 * 60 * 60 * 24),
);

const timeInfo = {
  currentHour,
  currentDay,
  formattedTime: formatTime(now),
};

// Calculate sun position and fetch weather
const sunPosition = calculateSunPosition(timeInfo.currentHour);
const weatherData = import.meta.env.WEATHER_API_KEY
  ? await fetchWeatherData(import.meta.env.WEATHER_API_KEY)
  : null;

const { sunAngle, shadowX, shadowY, shadowOpacity } = sunPosition;

// Add console logging for debugging
console.log("Sun Position:", sunPosition);
console.log("Calculated values:", {
  currentHour: timeInfo.currentHour,
  sunPosition,
  sunAngle,
  shadowX,
  shadowY,
  shadowOpacity,
});
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="favicon.png" type="image/png" />
    <title>mzb.dev</title>
    <ClientRouter />
    <SpeedInsights />
    <Analytics />
  </head>
  <body>
    <GradientBackground />
    <div class="layout-container">
      <Navigation
        pathname={pathname}
        sunAngle={sunAngle}
        shadowX={shadowX}
        shadowY={shadowY}
        shadowOpacity={shadowOpacity}
      />
      <main class="content">
        <slot />
      </main>
    </div>
    <InfoContainer timeInfo={timeInfo} weatherData={weatherData} />
  </body>
</html>

<style is:global>
  html {
    background: linear-gradient(
        135deg,
        var(--startColor) 0%,
        var(--endColor) 100%
      )
      fixed;
    transition: background 0.3s ease;
  }
</style>

<style>
  .info-container {
    position: fixed;
    bottom: 20px;
    left: 20px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    z-index: 1000;
  }

  .day-counter,
  .weather-info {
    font-size: 14px;
    color: rgba(35, 31, 32, 0.6);
    padding: 5px 10px;
    border-radius: 4px;
  }

  .time-display {
    font-size: 12px;
    margin-top: 2px;
    opacity: 0.8;
  }
</style>
